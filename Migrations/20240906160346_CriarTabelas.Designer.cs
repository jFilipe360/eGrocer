// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eGrocer.Data;

#nullable disable

namespace eGrocer.Migrations
{
    [DbContext(typeof(eGrocerDbContext))]
    [Migration("20240906160346_CriarTabelas")]
    partial class CriarTabelas
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eGrocer.Models.Carrinhos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<int>("UtilizadorFK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadorFK");

                    b.ToTable("Carrinhos");
                });

            modelBuilder.Entity("eGrocer.Models.CarrinhosProdutos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarrinhoFK")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrinhoFK");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("CarrinhosProdutos");
                });

            modelBuilder.Entity("eGrocer.Models.Categorias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Designacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("eGrocer.Models.Encomendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Carrinho")
                        .HasColumnType("int");

                    b.Property<string>("Morada")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Utilizador")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizadoresId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UtilizadoresId");

                    b.ToTable("Encomendas");
                });

            modelBuilder.Entity("eGrocer.Models.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaFK")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designacao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Imagem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaFK");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("eGrocer.Models.ProdutosEncomendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EncomendaFK")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("ProdutoFK")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncomendaFK");

                    b.HasIndex("ProdutoFK");

                    b.ToTable("ProdutosEncomendas");
                });

            modelBuilder.Entity("eGrocer.Models.Utilizadores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("eGrocer.Models.Carrinhos", b =>
                {
                    b.HasOne("eGrocer.Models.Utilizadores", "Utilizador")
                        .WithMany("ListaCarrinhos")
                        .HasForeignKey("UtilizadorFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Utilizador");
                });

            modelBuilder.Entity("eGrocer.Models.CarrinhosProdutos", b =>
                {
                    b.HasOne("eGrocer.Models.Carrinhos", "Carrinho")
                        .WithMany("ListaCarrinhoProduto")
                        .HasForeignKey("CarrinhoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eGrocer.Models.Produtos", "Produto")
                        .WithMany("ListaCarrinhosProdutos")
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrinho");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("eGrocer.Models.Encomendas", b =>
                {
                    b.HasOne("eGrocer.Models.Utilizadores", null)
                        .WithMany("ListaEncomendas")
                        .HasForeignKey("UtilizadoresId");
                });

            modelBuilder.Entity("eGrocer.Models.Produtos", b =>
                {
                    b.HasOne("eGrocer.Models.Categorias", "Categoria")
                        .WithMany("ListaCategorias")
                        .HasForeignKey("CategoriaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("eGrocer.Models.ProdutosEncomendas", b =>
                {
                    b.HasOne("eGrocer.Models.Encomendas", "Encomenda")
                        .WithMany("ListaProdutoEncomenda")
                        .HasForeignKey("EncomendaFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eGrocer.Models.Produtos", "Produto")
                        .WithMany("ListaProdutoEncomenda")
                        .HasForeignKey("ProdutoFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Encomenda");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("eGrocer.Models.Carrinhos", b =>
                {
                    b.Navigation("ListaCarrinhoProduto");
                });

            modelBuilder.Entity("eGrocer.Models.Categorias", b =>
                {
                    b.Navigation("ListaCategorias");
                });

            modelBuilder.Entity("eGrocer.Models.Encomendas", b =>
                {
                    b.Navigation("ListaProdutoEncomenda");
                });

            modelBuilder.Entity("eGrocer.Models.Produtos", b =>
                {
                    b.Navigation("ListaCarrinhosProdutos");

                    b.Navigation("ListaProdutoEncomenda");
                });

            modelBuilder.Entity("eGrocer.Models.Utilizadores", b =>
                {
                    b.Navigation("ListaCarrinhos");

                    b.Navigation("ListaEncomendas");
                });
#pragma warning restore 612, 618
        }
    }
}
